version: '3'

services:

  rabbit1:
    container_name: rockiot_rabbitmq
    build:
      context: ./docker/rabbit
    hostname: rabbit1
    volumes:
      - ./docker/rabbit/rabbitmq_enabled_plugins:/etc/rabbitmq/enabled_plugins
      - $HOME/docker/rabbitmq/data:/var/lib/rabbitmq/mnesia/
      - $HOME/docker/certificates/:/etc/ssl/certs/
    networks:
      - app-tier
    ports:
      - "5671:5671"
      - "5672:5672"
      - "1883:1883"
      - "8883:8883"
      - "15672:15672"
      - "15692:15692"

  rockiot: &rockiotfunction
    container_name: rockiot_app
    build:
      context: rockiot
      dockerfile: ./Dockerfile
    command: >
      sh -c "/wait.sh && /start.sh"
    depends_on:
      - rabbit1
    networks:
      - app-tier
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - rockiot-data:/rockiot-data
    env_file:
      - db.env
      - common.env
      - django.env
    ports:
      - 8000:8000
      - 8001:8001
      - 8002:8002
      - 8003:8003
    environment:
      - DEBUG=False
      - BROKER_EXCHANGE=amq.topic
      - WAIT_HOSTS=rabbit1:8883,rabbit1:15672
      - EXPORT_METRICS=True

  rockiotworker_default:
    <<: *rockiotfunction
    container_name: rockiot_app_worker_default
    command: >
      sh -c "/wait.sh && celery -A tasks.celery worker -Q celery_default -l info -c 1"
    ports: [ ]
    depends_on:
      - rabbit1
      - rockiot
    environment:
      - DEBUG=False
      - BROKER_EXCHANGE=amq.topic
      - WAIT_HOSTS=rabbit1:8883,rabbit1:15672,rockiot:8000
      - EXPORT_METRICS=False

  rockiotworker_device:
    <<: *rockiotfunction
    container_name: rockiot_app_worker_device
    command: >
      sh -c "/wait.sh && celery -A tasks.celery worker -Q celery_uplink,celery_downlink -l info -c 4 --prefetch-multiplier=2"
    ports: [ ]
    depends_on:
      - rabbit1
      - rockiot
    environment:
      - DEBUG=False
      - BROKER_EXCHANGE=amq.topic
      - WAIT_HOSTS=rabbit1:8883,rabbit1:15672,rockiot:8000
      - EXPORT_METRICS=False

  rockiotbeat:
    <<: *rockiotfunction
    container_name: rockiot_app_beat
    command: >
      sh -c "/wait.sh && celery -A tasks.celery beat -l info -S django"
    ports: [ ]
    depends_on:
      - rabbit1
      - rockiot
    environment:
      - DEBUG=False
      - BROKER_EXCHANGE=amq.topic
      - WAIT_HOSTS=rabbit1:8883,rabbit1:15672,rockiot:8000
      - EXPORT_METRICS=False

  rockiotlistener:
    <<: *rockiotfunction
    container_name: rockiot_app_listener
    command: >
      sh -c "/wait.sh && python manage.py listen_amqp_actions"
    ports: [ ]
    depends_on:
      - rabbit1
      - rockiot
    environment:
      - BROKER_EXCHANGE=amq.topic
      - WAIT_HOSTS=rabbit1:8883,rabbit1:15672,rockiot:8000
      - EXPORT_METRICS=False
    restart: on-failure

  statsd:
    image: prom/statsd-exporter
    container_name: statsd
    volumes:
      - "./docker/statsd/statsd-mapping.conf:/statsd/statsd-mapping.conf:Z"
    command: "--statsd.mapping-config=/statsd/statsd-mapping.conf"
    ports:
      - "9125:9125/udp"
      - "9102:9102"
    networks:
      - app-tier

  rockiot_ingest:
    build: rockiot_ingest
    env_file:
      - db.env
      - common.env
    environment:
      - BROKER_USER=amqpingest
      - BROKER_PASS=amqpingest_pass
      - BROKER_QUEUE=mq2_amqp
      - WAIT_HOSTS=rabbit1:8883,rockiot:8000,statsd:9125
    depends_on:
      - rabbit1
      - rockiot
      - statsd
    networks:
      - app-tier
    restart: on-failure

  portainer:
    image: cr.portainer.io/portainer/portainer-ce:2.9.3
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    ports:
      - "8099:8099"
      - "9443:9443"
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge

volumes:
  rockiot-data:
  portainer_data:
    external: true